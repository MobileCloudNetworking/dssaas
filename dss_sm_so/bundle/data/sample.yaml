HeatTemplateFormatVersion: '2012-12-12'
Description: 'YAML MCN DSSaaS Template'
Resources:
# -------------------------------------------------------------------------------- #
#                         DATABASE / STORING RESOURCES                             #
# -------------------------------------------------------------------------------- #

#  dbaas_trove_instance:
#    Type: OS::Trove::Instance
#    Properties:
#      databases: [{"character_set": utf8, "name": DSSaaS, "collate": utf8_general_ci}]
#      flavor: m1.small
#      name: dbaas_trove_instance
#      size: 2
#      users: [{"password": changeme, "name": user, "databases": [DSSaaS]}]

  dbaas_server:
    Type: OS::Nova::Server
    Properties:
      key_name: bern-key
      flavor: m1.small
      image: DSS-DB-SIC
      networks:
        - port: { Ref : dbaas_server_port }
      user_data: |
        #!/bin/bash
        cd /home/ubuntu/
        #Static data, to be removed
        databaseusername='root'
        databasehost='localhost'
        databasepassword='xxxxxxxxxx'
        sed -i.bak s/dss-cms/`hostname`/g /etc/hosts
        #Configure db
        echo "GRANT ALL PRIVILEGES ON *.* TO '$databaseusername'@'%' IDENTIFIED BY '$databasepassword';" | mysql -u $databaseusername -p$databasepassword
        sed -i.bak "s,bind-address,#bind-address,g" /etc/mysql/my.cnf
        #restart services
        service mysql restart

  dbaas_server_port:
    Type: OS::Neutron::Port
    Properties:
      network_id: "313a8f80-4397-4add-83c9-94f568611ade"
      fixed_ips:
        - subnet_id: "2948595e-bbc0-4ab8-a46f-79afb9f3d277"
      replacement_policy: AUTO

# -------------------------------------------------------------------------------- #
#                         CMS / FRONTEND RESOURCES                                 #
# -------------------------------------------------------------------------------- #
  cms1_server:
    Type: OS::Nova::Server
    Properties:
      key_name: bern-key
      flavor: m1.small
      image: DSS-IMG-Analytics
      networks:
        - port: { Ref : cms1_server_port }
      user_data: |
        #!/bin/bash
        cd /home/ubuntu/
        sed -i.bak s/dss/`hostname`/g /etc/hosts
        # Download and run main server agent
        rm -f agent*
        curl http://213.165.68.82/agent.tar.gz > agent.tar.gz
        tar -xvzf agent.tar.gz
        python /home/ubuntu/agent.py /usr/share/tomcat7/ false false false &

  cms1_server_port:
    Type: OS::Neutron::Port
    Properties:
      network_id: "313a8f80-4397-4add-83c9-94f568611ade"
      fixed_ips:
        - subnet_id: "2948595e-bbc0-4ab8-a46f-79afb9f3d277"
      replacement_policy: AUTO

  cms1_server_floating_ip:
    Type: OS::Neutron::FloatingIP
    Properties:
      floating_network_id: "77e659dd-f1b4-430c-ac6f-d92ec0137c85"  # public OK
      port_id: { Ref : cms1_server_port }

# -------------------------------------------------------------------------------- #
#                         MCR / FRONTEND RESOURCES                                 #
# -------------------------------------------------------------------------------- #
  mcr_server:
    Type: OS::Nova::Server
    Properties:
      key_name: bern-key
      flavor: m1.small
      image: DSS-IMG-Analytics
      networks:
        - port: { Ref : mcr_server_port }
      user_data: |
        #!/bin/bash
        cd /home/ubuntu/
        sed -i.bak s/dss/`hostname`/g /etc/hosts
        # Download and run main server agent
        rm -f agent*
        curl http://213.165.68.82/agent.tar.gz > agent.tar.gz
        tar -xvzf agent.tar.gz
        python /home/ubuntu/agent.py /usr/share/tomcat7/ false false false &

  mcr_server_port:
    Type: OS::Neutron::Port
    Properties:
      network_id: "313a8f80-4397-4add-83c9-94f568611ade"
      fixed_ips:
        - subnet_id: "2948595e-bbc0-4ab8-a46f-79afb9f3d277"
      replacement_policy: AUTO

  mcr_server_floating_ip:
    Type: OS::Neutron::FloatingIP
    Properties:
      floating_network_id: "77e659dd-f1b4-430c-ac6f-d92ec0137c85"  # public OK
      port_id: { Ref : mcr_server_port }

# -------------------------------------------------------------------------------- #
#                         LB / FRONTEND RESOURCES                                  #
# -------------------------------------------------------------------------------- #

  cms_healthmonitor:
    Type: OS::Neutron::HealthMonitor
    Properties:
      delay : 10
      max_retries : 3
      timeout : 10
      type : HTTP
      url_path : /WebAppDSS/
      expected_codes : 200-399
  cms_lb_pool:
    Type: OS::Neutron::Pool
    Properties:
      lb_method: ROUND_ROBIN
      name: mypool
      protocol: HTTP
      subnet_id: "2948595e-bbc0-4ab8-a46f-79afb9f3d277"
      monitors : [{ Ref: cms_healthmonitor }]
      vip : {"subnet": "2948595e-bbc0-4ab8-a46f-79afb9f3d277", "name": myvip, "protocol_port": 80, "session_persistence":{"type": HTTP_COOKIE }}

  I2O248_loadbalancer:
    Type: OS::Neutron::LoadBalancer
    Properties:
      members: [ { Ref: cms1_server } ]
      pool_id: { Ref: cms_lb_pool }
      protocol_port: 80

  cms_lb_floatingip:
    Type: OS::Neutron::FloatingIP
    Properties:
      floating_network_id: "77e659dd-f1b4-430c-ac6f-d92ec0137c85"
      port_id: {'Fn::Select' : ['port_id', { 'Fn::GetAtt': [ cms_lb_pool, vip ] } ] }

# -------------------------------------------------------------------------------- #
#                         LB_Dashboard / FRONTEND RESOURCES                                  #
# -------------------------------------------------------------------------------- #

  dashboard_healthmonitor:
    Type: OS::Neutron::HealthMonitor
    Properties:
      delay : 10
      max_retries : 3
      timeout : 10
      type : HTTP
      url_path : /WebAppDSS/
      expected_codes : 200-399
  dashboard_lb_pool:
    Type: OS::Neutron::Pool
    Properties:
      lb_method: ROUND_ROBIN
      name: mypool8080
      protocol: HTTP
      subnet_id: "2948595e-bbc0-4ab8-a46f-79afb9f3d277"
      monitors : [{ Ref: dashboard_healthmonitor }]
      vip : {"subnet": "2948595e-bbc0-4ab8-a46f-79afb9f3d277", "name": myvip8080, "protocol_port": 8080, "session_persistence":{"type": HTTP_COOKIE }}

  TK1UDA_loadbalancer:
    Type: OS::Neutron::LoadBalancer
    Properties:
      members: [ { Ref: cms1_server } ]
      pool_id: { Ref: dashboard_lb_pool }
      protocol_port: 8080

  dashboard_lb_floatingip:
    Type: OS::Neutron::FloatingIP
    Properties:
      floating_network_id: "77e659dd-f1b4-430c-ac6f-d92ec0137c85"
      port_id: {'Fn::Select' : ['port_id', { 'Fn::GetAtt': [ dashboard_lb_pool, vip ] } ] }

Outputs:
  mcn.dss.cms1.endpoint:
    Description: Floating IP address of DSS CMS in public network
    Value: {'Fn::GetAtt': [cms1_server_floating_ip, floating_ip_address] }

  mcn.dss.mcr.endpoint:
    Description: Floating IP address of DSS MCR in public network
    Value: { 'Fn::GetAtt': [ mcr_server_floating_ip, floating_ip_address ] }

  mcn.dss.db.endpoint:
    Description: IP address of DSS DB in private network
    Value: { 'Fn::GetAtt': [ dbaas_server, first_address ] }

  mcn.dss.lb.endpoint:
    Description: Floating IP address of DSS load balancer in public network
    Value: { 'Fn::GetAtt': [ cms_lb_floatingip, floating_ip_address ] }

  mcn.dss.dashboard.lb.endpoint:
    Description: Floating IP address of DSS Dashboard load balancer in public network
    Value: { 'Fn::GetAtt': [ dashboard_lb_floatingip, floating_ip_address ] }

  mcn.dss.mcr.hostname:
    Description: open stack instance name
    Value: { 'Fn::GetAtt': [ mcr_server, show ] }

  mcn.dss.cms1.hostname:
    Description: open stack instance name
    Value: { 'Fn::GetAtt': [ cms1_server, show ] }